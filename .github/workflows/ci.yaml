name: CI

on:
  pull_request:
    branches:
      - dev

jobs:
  setup-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: true

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        id: pnpm-cache
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - if: steps.pnpm-cache.outputs.cache-hit == 'true'
        run: echo 'pnpm cache hit!'
      - if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: echo 'pnpm cache missed!'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: |
          pnpm lint
          pnpm prettier
          pnpm lint:style

  build:
    needs: setup-and-lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ 'design-system', 'missionary-admin', 'missionary-app' ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Build packages
        run: |
          pnpm install
          pnpm run build --filter ${{ matrix.package }}
